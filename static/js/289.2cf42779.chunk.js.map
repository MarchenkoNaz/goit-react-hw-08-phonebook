{"version":3,"file":"static/js/289.2cf42779.chunk.js","mappings":"wMAAaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEtBC,EAAe,SAAAH,GAAK,OAAIA,EAAMI,MAAV,EAEpBC,EAAkB,SAAAL,GAAK,OAAIA,EAAMC,SAASK,SAAnB,EAEvBC,EAAc,SAAAP,GAAK,OAAIA,EAAMC,SAASO,KAAnB,E,mBCDnBC,EAAc,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACXV,GAAWW,EAAAA,EAAAA,IAAYb,GAkB7B,OACC,0BACC,kBAAMc,SAlBiB,SAAAC,GACxBA,EAAEC,iBACF,IAAMC,EAAcF,EAAEG,OAAOC,SAASC,KAAKC,MACrCC,EAAgBP,EAAEG,OAAOC,SAASI,OAAOF,MACzCG,EAAa,CAClBJ,KAAMH,EACNM,OAAQD,GAETX,GAASc,EAAAA,EAAAA,IAAWD,IAEhBtB,EAASwB,MAAK,SAAAC,GAAC,OAAIA,EAAEP,OAASH,CAAf,IAClBW,MAAM,uBAAD,OAAwBX,EAAxB,iBAGNF,EAAEG,OAAOW,OACT,EAGmCC,UAAU,mBAA5C,WACC,iBAAKA,UAAU,OAAf,WACC,kBAAOC,QAAQ,OAAOD,UAAU,aAAhC,SAA6C,UAG7C,kBACCA,UAAU,eACVE,KAAK,OACLZ,KAAK,OACLa,QAAQ,iBACRC,MAAM,sJACNC,YAAY,eACZC,UAAQ,QAIV,kBAAOL,QAAQ,SAASD,UAAU,aAAlC,SAA+C,YAG/C,gBAAKA,UAAU,OAAf,UACC,kBACCA,UAAU,eACVE,KAAK,MACLZ,KAAK,SACLa,QAAQ,iBACRC,MAAM,+FACNE,UAAQ,OAGV,mBAAQN,UAAU,kBAAkBE,KAAK,SAAzC,SAAkD,oBAMrD,EC1DYK,EAAc,WAC1B,IAAM1B,GAAWC,EAAAA,EAAAA,MACXP,GAASQ,EAAAA,EAAAA,IAAYT,GACrBF,GAAWW,EAAAA,EAAAA,IAAYb,GAI7B,OAAQ,iBAAK8B,UAAU,MAAf,WACP,eAAIA,UAAU,aAAd,SAA2B,kBAC3B,eAAIA,UAAU,+BAAd,SAJ6C5B,EAASG,QAAO,qBAAGe,KAAgBkB,cAAcC,SAASlC,EAAOiC,cAAjD,IAKlCE,KAAI,SAAAC,GAAO,OACpC,gBAAsBX,UAAU,iDAAhC,WACC,4BACC,eAAGA,UAAU,OAAb,UAAoB,SAAOW,EAAQrB,SACnC,eAAGU,UAAU,MAAb,UAAmB,WAASW,EAAQlB,cAErC,mBAAQS,KAAK,SAASF,UAAU,yBAAyBY,QAAS,kBAAM/B,GAASgC,EAAAA,EAAAA,IAAcF,EAAQG,IAArC,EAAlE,SAA6G,aALpGH,EAAQG,GADkB,QAWvC,E,UCtBYC,EAAS,WACrB,IAAMlC,GAAWC,EAAAA,EAAAA,MAIjB,OAAQ,iCACP,iBAAKkB,UAAU,6BAAf,WACC,kBAAOC,QAAQ,qBAAqBD,UAAU,aAA9C,SAA2D,oBAC3D,kBAAOA,UAAU,eAAeE,KAAK,OAAOc,SAN1B,SAAA/B,GACnBJ,GAASoC,EAAAA,EAAAA,GAAehC,EAAEG,OAAOG,OACjC,OAKM,MAEP,E,oBCLc,SAAS2B,IACvB,IAAMrC,GAAWC,EAAAA,EAAAA,MACXL,GAAYM,EAAAA,EAAAA,IAAYP,GACxBG,GAAQI,EAAAA,EAAAA,IAAYL,GAM1B,OAJAyC,EAAAA,EAAAA,YAAU,WACTtC,GAASuC,EAAAA,EAAAA,MACT,GAAE,CAACvC,KAGH,iCACC,SAACD,EAAD,KACA,SAACmC,EAAD,IACCtC,IAAcE,IAAS,SAAC0C,EAAA,EAAD,KACxB,SAACd,EAAD,MAGF,C","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/MainPage.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nexport const ContactForm = () => {\n\tconst dispatch = useDispatch();\n\tconst contacts = useSelector(selectContacts);\n\n\tconst handleSubmitForm = e => {\n\t\te.preventDefault();\n\t\tconst contactName = e.target.elements.name.value;\n\t\tconst contactNumber = e.target.elements.number.value;\n\t\tconst newContact = {\n\t\t\tname: contactName,\n\t\t\tnumber: contactNumber,\n\t\t};\n\t\tdispatch(addContact(newContact));\n\n\t\tif (contacts.some(i => i.name === contactName)) {\n\t\t\talert(`You alraeady have a ${contactName} in contacts`);\n\t\t\treturn;\n\t\t}\n\t\te.target.reset();\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<form onSubmit={handleSubmitForm} className='container-sm m-2'>\n\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t<label htmlFor='name' className=\"form-label\">\n\t\t\t\t\t\tName\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\tpattern=\"^[a-zA-Z\\s]+$\"\n\t\t\t\t\t\ttitle=\"On english!!!Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n\t\t\t\t\t\tplaceholder='Jack Johnson'\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\n\t\t\t\t</div>\n\t\t\t\t<label htmlFor='number' className=\"form-label\">\n\t\t\t\t\tNumber\n\t\t\t\t</label>\n\t\t\t\t<div className=\"mb-3\">\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\ttype=\"tel\"\n\t\t\t\t\t\tname=\"number\"\n\t\t\t\t\t\tpattern=\"^\\+380\\d{9}$\"\n\t\t\t\t\t\ttitle=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n\t\t\t\t\t\trequired\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<button className=\"btn btn-primary\" type=\"submit\">\n\t\t\t\t\tAdd contact\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n\tconst dispatch = useDispatch();\n\tconst filter = useSelector(selectFilter);\n\tconst contacts = useSelector(selectContacts);\n\n\tconst contactsFilteredByName = () => { return contacts.filter(({ name }) => name.toLowerCase().includes(filter.toLowerCase())); }\n\n\treturn (<div className='m-2'>\n\t\t<h1 className=\"display-3 \">Contact List</h1>\n\t\t<ul className=\"list-group  container-sm m-2\">\n\t\t\t{contactsFilteredByName().map(contact =>\n\t\t\t\t< li key={contact.id} className=\"list-group-item d-flex justify-content-between\" >\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p className='mb-1'>Name: {contact.name}</p>\n\t\t\t\t\t\t<p className='m-0'>Number: {contact.number}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button type=\"button\" className=\"btn btn-outline-danger\" onClick={() => dispatch(deleteContact(contact.id))}>Delete</button>\n\t\t\t\t</li>\n\t\t\t)}\n\t\t</ul>\n\t</div >)\n};\n\n","import { useDispatch } from 'react-redux';\nimport { setFilterValue } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n\tconst dispatch = useDispatch();\n\tconst filterValue = e => {\n\t\tdispatch(setFilterValue(e.target.value));\n\t};\n\treturn (<>\n\t\t<div className=\"mb-3 container-sm mt-3 m-2\">\n\t\t\t<label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Search contact</label>\n\t\t\t<input className=\"form-control\" type=\"text\" onChange={filterValue} />\n\t\t</div>\t</>\n\t);\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport Loader from 'components/Loader/Loader';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\nexport default function MainBook() {\n\tconst dispatch = useDispatch();\n\tconst isLoading = useSelector(selectIsLoading);\n\tconst error = useSelector(selectError);\n\n\tuseEffect(() => {\n\t\tdispatch(fetchContacts());\n\t}, [dispatch]);\n\n\treturn (\n\t\t<>\n\t\t\t<ContactForm />\n\t\t\t<Filter />\n\t\t\t{isLoading && !error && <Loader />}\n\t\t\t<ContactList />\n\t\t</>\n\t);\n}\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","ContactForm","dispatch","useDispatch","useSelector","onSubmit","e","preventDefault","contactName","target","elements","name","value","contactNumber","number","newContact","addContact","some","i","alert","reset","className","htmlFor","type","pattern","title","placeholder","required","ContactList","toLowerCase","includes","map","contact","onClick","deleteContact","id","Filter","onChange","setFilterValue","MainBook","useEffect","fetchContacts","Loader"],"sourceRoot":""}